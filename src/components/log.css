/* src/App.css */

/* Variables de color (asegúrate de que estas sean las mismas que en tu Navbar) */
:root {
  --primary-dark-grey: #333333; /* Un negro oscuro pero no puro */
  --secondary-medium-grey: #474747; /* Un gris medio para hover o fondo de elementos */
  --text-color-light: #ecf0f1; /* Color de texto claro para contraste */
  --accent-green: #2ecc71; /* Color de acento para el botón de login/activo */
  --accent-red: #e74c3c; /* Color para el botón de cerrar sesión */
}

/* Estilos para el contenedor principal de autenticación */
.auth-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: calc(100vh - 80px); /* Ajusta si tu navbar tiene otra altura */
  background-color: #222222; /* Fondo ligeramente más oscuro que el navbar para contraste */
  padding: 2rem;
  font-family: 'Roboto', sans-serif;
  color: var(--text-color-light);
}

.auth-container h2 {
  font-size: 2.2rem;
  margin-bottom: 2rem;
  color: var(--text-color-light);
  display: flex;
  align-items: center;
  gap: 0.8rem;
}

.auth-container h2 .icon { /* Si usas un icono como el candado */
  font-size: 2rem;
}

.auth-container form {
  background-color: var(--primary-dark-grey);
  padding: 3rem 2.5rem;
  border-radius: 10px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.4);
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  width: 100%;
  max-width: 400px;
}

.auth-container input[type="text"],
.auth-container input[type="password"] {
  padding: 1rem 1.2rem;
  border: 1px solid var(--secondary-medium-grey);
  border-radius: 5px;
  background-color: #2a2a2a; /* Fondo del input un poco más claro que el form */
  color: var(--text-color-light);
  font-size: 1rem;
  outline: none;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.auth-container input[type="text"]::placeholder,
.auth-container input[type="password"]::placeholder {
  color: #a0a0a0;
}

.auth-container input[type="text"]:focus,
.auth-container input[type="password"]:focus {
  border-color: var(--accent-green);
  box-shadow: 0 0 0 3px rgba(46, 204, 113, 0.3); /* Sombra suave al enfocar */
}

.auth-container button[type="submit"] {
  background-color: var(--accent-green);
  color: white;
  padding: 1.2rem 1.5rem;
  border: none;
  border-radius: 5px;
  font-size: 1.1rem;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.2s ease;
  margin-top: 1rem;
}

.auth-container button[type="submit"]:hover {
  background-color: #27ae60;
  transform: translateY(-2px);
}

.auth-container p {
  margin-top: 1.5rem;
  font-size: 1rem;
  text-align: center;
  color: var(--text-color-light);
}

/* Estilos para el mensaje de éxito/error */
.auth-container p:not(.register-option p) { /* Evita aplicar a los párrafos de "No tienes cuenta" */
  padding: 0.8rem 1.2rem;
  border-radius: 5px;
  margin-top: 1.5rem;
  font-weight: bold;
}

.auth-container p:contains("exitoso") { /* Esto requiere un selector de contenido o JS para aplicar */
    background-color: rgba(46, 204, 113, 0.2); /* Fondo verde claro para éxito */
    color: var(--accent-green);
}

/* Para aplicar el estilo del mensaje, podrías hacer algo así en tu componente React:
   <p className={message.includes("exitoso") ? "success-message" : "error-message"}>{message}</p>
   Y luego definir .success-message y .error-message en CSS.
*/

/* Estilos para la opción de registro */
.register-option {
  margin-top: 2rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
}

.register-option p {
  margin: 0;
  font-size: 0.95rem;
  color: #bbb; /* Un gris un poco más claro para este texto */
}

.register-button {
  background-color: var(--secondary-medium-grey); /* Fondo gris oscuro para el botón de registro */
  color: var(--text-color-light);
  padding: 0.8rem 1.5rem;
  border-radius: 5px;
  text-decoration: none;
  font-size: 1rem;
  transition: background-color 0.3s ease, transform 0.2s ease;
}

.register-button:hover {
  background-color: #5a5a5a;
  transform: translateY(-2px);
}

/* Media Queries para responsividad */
@media (max-width: 600px) {
  .auth-container {
    padding: 1rem;
  }

  .auth-container form {
    padding: 2rem 1.5rem;
  }

  .auth-container h2 {
    font-size: 1.8rem;
    margin-bottom: 1.5rem;
  }
}
/* src/App.css (Añade o modifica estas líneas) */

.auth-container input[type="text"],
.auth-container input[type="password"],
.auth-container input[type="email"], /* ¡NUEVO! */
.auth-container input[type="phone_number"] { /* Asegúrate de cubrir también 'phone_number' */
  padding: 1rem 1.2rem;
  border: 1px solid var(--secondary-medium-grey);
  border-radius: 5px;
  background-color: #2a2a2a;
  color: var(--text-color-light);
  font-size: 1rem;
  outline: none;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.auth-container input[type="text"]::placeholder,
.auth-container input[type="password"]::placeholder,
.auth-container input[type="email"]::placeholder, /* ¡NUEVO! */
.auth-container input[type="phone_number"]::placeholder { /* ¡NUEVO! */
  color: #a0a0a0;
}

.auth-container input[type="text"]:focus,
.auth-container input[type="password"]:focus,
.auth-container input[type="email"]:focus, /* ¡NUEVO! */
.auth-container input[type="phone_number"]:focus { /* ¡NUEVO! */
  border-color: var(--accent-green);
  box-shadow: 0 0 0 3px rgba(46, 204, 113, 0.3);
}

/* Y si quieres un icono en el título como en Login: */
/* Asegúrate de importar FaClipboardList en Register.js:
   import { FaClipboardList } from 'react-icons/fa';
*/
/* Y luego usarlo en tu h2:
   <h2><FaClipboardList className="icon" /> Registro de Usuario</h2>
*/